// 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

	// 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.leesfamily'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
//	//security
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
//	implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.8.1'
//
//
//	// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
//	implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.2.RELEASE'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//	runtimeOnly 'com.mysql:mysql-connector-j'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
	// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations
	implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.8'
	// https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-models
	implementation group: 'io.swagger.core.v3', name: 'swagger-models', version: '2.2.8'
//	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
//	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
//	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
//	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.14'

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial
	implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.6.14.Final'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

	// openvidu
	// https://mvnrepository.com/artifact/io.openvidu/openvidu-java-client
	implementation group: 'io.openvidu', name: 'openvidu-java-client', version: '2.25.0'

	// 알림톡 위한 의존성
	// https://mvnrepository.com/artifact/net.nurigo/sdk
	implementation group: 'net.nurigo', name: 'sdk', version: '4.2.9'


	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

	// 테스트에서 lombok 사용 - 추가
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'



	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 추가
// querydsl 설정 추가

// querydsl에서 사용할 경로를 설정한다.
def querydslDir = "$buildDir/generated/querydsl"

// JPA 사용 여부와 사용할 경로를 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet 추가한다.
sourceSets {
	main.java.srcDir querydslDir
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}